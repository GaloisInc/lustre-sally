[Lustre] Loading settings from: "missionaries-and-cannibals.lus.settings"
Core Lustre
===========

node (m$4 : int, c$4 : int)
  returns ()
  assumes (ITE)
  shows (cex, safety_missionaries, conservation_cannibals, conservation_missionaries)
let
  pre_boat_on_left_bank$4 : bool
    = pre boat_on_left_bank
   
  boat_on_left_bank : bool
    = true -> Not(pre_boat_on_left_bank$4)
   
  s.left.m$2 : int
    = pre s.left.m
   
  m$3 : int
    = pre m$4
   
  ferry_left.left.m : int
    = Add(s.left.m$2, m$3)
   
  s.left.m$1 : int
    = pre s.left.m
   
  m$2 : int
    = pre m$4
   
  ferry_right.left.m : int
    = Sub(s.left.m$1, m$2)
   
  pre_boat_on_left_bank$3 : bool
    = pre boat_on_left_bank
   
  s.left.m : int
    = 3 -> ITE(pre_boat_on_left_bank$3, ferry_right.left.m, ferry_left.left.m)
   
  s.right.m$2 : int
    = pre s.right.m
   
  ferry_left.right.m : int
    = Sub(s.right.m$2, m$3)
   
  s.right.m$1 : int
    = pre s.right.m
   
  ferry_right.right.m : int
    = Add(s.right.m$1, m$2)
   
  pre_boat_on_left_bank$2 : bool
    = pre boat_on_left_bank
   
  s.right.m : int
    = 0 -> ITE(pre_boat_on_left_bank$2, ferry_right.right.m, ferry_left.right.m)
   
  conservation_missionaries : bool
    = Eq(Add(s.left.m, s.right.m), 3)
   
  s.left.c$2 : int
    = pre s.left.c
   
  c$3 : int
    = pre c$4
   
  ferry_left.left.c : int
    = Add(s.left.c$2, c$3)
   
  s.left.c$1 : int
    = pre s.left.c
   
  c$2 : int
    = pre c$4
   
  ferry_right.left.c : int
    = Sub(s.left.c$1, c$2)
   
  pre_boat_on_left_bank$1 : bool
    = pre boat_on_left_bank
   
  s.left.c : int
    = 3 -> ITE(pre_boat_on_left_bank$1, ferry_right.left.c, ferry_left.left.c)
   
  s.right.c$2 : int
    = pre s.right.c
   
  ferry_left.right.c : int
    = Sub(s.right.c$2, c$3)
   
  s.right.c$1 : int
    = pre s.right.c
   
  ferry_right.right.c : int
    = Add(s.right.c$1, c$2)
   
  pre_boat_on_left_bank : bool
    = pre boat_on_left_bank
   
  s.right.c : int
    = 0 -> ITE(pre_boat_on_left_bank, ferry_right.right.c, ferry_left.right.c)
   
  conservation_cannibals : bool
    = Eq(Add(s.left.c, s.right.c), 3)
   
  safety_missionaries : bool
    = And(Or(Geq(s.left.m, s.left.c), Eq(s.left.m, 0)), Or(Geq(s.right.m, s.right.c), Eq(s.right.m, 0)))
   
  cex : bool
    = Not(And(Eq(s.right.m, 3), Eq(s.right.c, 3)))
   
  src.m$1 : int
    = s.left.m
   
  src.c$1 : int
    = s.left.c
   
  dst.m$1 : int
    = s.right.m
   
  dst.c$1 : int
    = s.right.c
   
  m$1 : int
    = m$4
   
  c$1 : int
    = c$4
   
  safe$1 : bool
    = And(And(And(And(And(And(And(Geq(m$1, 0), Geq(c$1, 0)), Geq(Add(m$1, c$1), 1)), Leq(Add(m$1, c$1), 2)), Leq(m$1, src.m$1)), Leq(c$1, src.c$1)), Or(Geq(Sub(src.m$1, m$1), Sub(src.c$1, c$1)), Eq(src.m$1, m$1))), Or(Geq(Add(dst.m$1, m$1), Add(dst.c$1, c$1)), Eq(Add(dst.m$1, m$1), 0)))
   
  src.m : int
    = s.right.m
   
  src.c : int
    = s.right.c
   
  dst.m : int
    = s.left.m
   
  dst.c : int
    = s.left.c
   
  m : int
    = m$4
   
  c : int
    = c$4
   
  safe : bool
    = And(And(And(And(And(And(And(Geq(m, 0), Geq(c, 0)), Geq(Add(m, c), 1)), Leq(Add(m, c), 2)), Leq(m, src.m)), Leq(c, src.c)), Or(Geq(Sub(src.m, m), Sub(src.c, c)), Eq(src.m, m))), Or(Geq(Add(dst.m, m), Add(dst.c, c)), Eq(Add(dst.m, m), 0)))
   
  ITE : bool
    = ITE(boat_on_left_bank, safe$1, safe)
tel
Sally Model
===========

(define-state-type
   S
   (
     (ITE Bool)
     (c Int)
     (cex Bool)
     (m Int)
     (safe Bool)
     (|boat_on_left_bank:init| Bool)
     (|boat_on_left_bank| Bool)
     (|c:1| Int)
     (|c:2| Int)
     (|c:3| Int)
     (|c:4| Int)
     (|conservation_cannibals| Bool)
     (|conservation_missionaries| Bool)
     (|dst.c:1| Int)
     (|dst.c| Int)
     (|dst.m:1| Int)
     (|dst.m| Int)
     (|ferry_left.left.c| Int)
     (|ferry_left.left.m| Int)
     (|ferry_left.right.c| Int)
     (|ferry_left.right.m| Int)
     (|ferry_right.left.c| Int)
     (|ferry_right.left.m| Int)
     (|ferry_right.right.c| Int)
     (|ferry_right.right.m| Int)
     (|gal-initializing| Bool)
     (|m:1| Int)
     (|m:2| Int)
     (|m:3| Int)
     (|m:4| Int)
     (|pre_boat_on_left_bank:1| Bool)
     (|pre_boat_on_left_bank:2| Bool)
     (|pre_boat_on_left_bank:3| Bool)
     (|pre_boat_on_left_bank:4| Bool)
     (|pre_boat_on_left_bank| Bool)
     (|s.left.c:1| Int)
     (|s.left.c:2| Int)
     (|s.left.c:init| Bool)
     (|s.left.c| Int)
     (|s.left.m:1| Int)
     (|s.left.m:2| Int)
     (|s.left.m:init| Bool)
     (|s.left.m| Int)
     (|s.right.c:1| Int)
     (|s.right.c:2| Int)
     (|s.right.c:init| Bool)
     (|s.right.c| Int)
     (|s.right.m:1| Int)
     (|s.right.m:2| Int)
     (|s.right.m:init| Bool)
     (|s.right.m| Int)
     (|safe:1| Bool)
     (|safety_missionaries| Bool)
     (|src.c:1| Int)
     (|src.c| Int)
     (|src.m:1| Int)
     (|src.m| Int))
   (
     (|c:4| Int)
     (|m:4| Int)))
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |boat_on_left_bank:init| true)
      (= |s.left.m:init| true)
      (= |s.right.m:init| true)
      (= |s.left.c:init| true)
      (= |s.right.c:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.|m:4| input.|m:4|)
      (= next.|c:4| input.|c:4|)
      next.ITE
      (= next.|pre_boat_on_left_bank:4| state.|boat_on_left_bank|)
      (ite
         state.|boat_on_left_bank:init|
         (= next.|boat_on_left_bank| true)
         (=
            next.|boat_on_left_bank|
            (not next.|pre_boat_on_left_bank:4|)))
      (= next.|boat_on_left_bank:init| false)
      (= next.|s.left.m:2| state.|s.left.m|)
      (= next.|m:3| state.|m:4|)
      (=
         next.|ferry_left.left.m|
         (+ next.|s.left.m:2| next.|m:3|))
      (= next.|s.left.m:1| state.|s.left.m|)
      (= next.|m:2| state.|m:4|)
      (=
         next.|ferry_right.left.m|
         (- next.|s.left.m:1| next.|m:2|))
      (= next.|pre_boat_on_left_bank:3| state.|boat_on_left_bank|)
      (ite
         state.|s.left.m:init|
         (= next.|s.left.m| 3)
         (=
            next.|s.left.m|
            (ite next.|pre_boat_on_left_bank:3| next.|ferry_right.left.m| next.|ferry_left.left.m|)))
      (= next.|s.left.m:init| false)
      (= next.|s.right.m:2| state.|s.right.m|)
      (=
         next.|ferry_left.right.m|
         (- next.|s.right.m:2| next.|m:3|))
      (= next.|s.right.m:1| state.|s.right.m|)
      (=
         next.|ferry_right.right.m|
         (+ next.|s.right.m:1| next.|m:2|))
      (= next.|pre_boat_on_left_bank:2| state.|boat_on_left_bank|)
      (ite
         state.|s.right.m:init|
         (= next.|s.right.m| 0)
         (=
            next.|s.right.m|
            (ite next.|pre_boat_on_left_bank:2| next.|ferry_right.right.m| next.|ferry_left.right.m|)))
      (= next.|s.right.m:init| false)
      (=
         next.|conservation_missionaries|
         (=
            (+ next.|s.left.m| next.|s.right.m|)
            3))
      (= next.|s.left.c:2| state.|s.left.c|)
      (= next.|c:3| state.|c:4|)
      (=
         next.|ferry_left.left.c|
         (+ next.|s.left.c:2| next.|c:3|))
      (= next.|s.left.c:1| state.|s.left.c|)
      (= next.|c:2| state.|c:4|)
      (=
         next.|ferry_right.left.c|
         (- next.|s.left.c:1| next.|c:2|))
      (= next.|pre_boat_on_left_bank:1| state.|boat_on_left_bank|)
      (ite
         state.|s.left.c:init|
         (= next.|s.left.c| 3)
         (=
            next.|s.left.c|
            (ite next.|pre_boat_on_left_bank:1| next.|ferry_right.left.c| next.|ferry_left.left.c|)))
      (= next.|s.left.c:init| false)
      (= next.|s.right.c:2| state.|s.right.c|)
      (=
         next.|ferry_left.right.c|
         (- next.|s.right.c:2| next.|c:3|))
      (= next.|s.right.c:1| state.|s.right.c|)
      (=
         next.|ferry_right.right.c|
         (+ next.|s.right.c:1| next.|c:2|))
      (= next.|pre_boat_on_left_bank| state.|boat_on_left_bank|)
      (ite
         state.|s.right.c:init|
         (= next.|s.right.c| 0)
         (=
            next.|s.right.c|
            (ite next.|pre_boat_on_left_bank| next.|ferry_right.right.c| next.|ferry_left.right.c|)))
      (= next.|s.right.c:init| false)
      (=
         next.|conservation_cannibals|
         (=
            (+ next.|s.left.c| next.|s.right.c|)
            3))
      (=
         next.|safety_missionaries|
         (and
            (or
               (<= next.|s.left.c| next.|s.left.m|)
               (= next.|s.left.m| 0))
            (or
               (<= next.|s.right.c| next.|s.right.m|)
               (= next.|s.right.m| 0))))
      (=
         next.cex
         (not
            (and
               (= next.|s.right.m| 3)
               (= next.|s.right.c| 3))))
      (= next.|src.m:1| next.|s.left.m|)
      (= next.|src.c:1| next.|s.left.c|)
      (= next.|dst.m:1| next.|s.right.m|)
      (= next.|dst.c:1| next.|s.right.c|)
      (= next.|m:1| next.|m:4|)
      (= next.|c:1| next.|c:4|)
      (=
         next.|safe:1|
         (and
            (<= 0 next.|m:1|)
            (<= 0 next.|c:1|)
            (<=
               1
               (+ next.|m:1| next.|c:1|))
            (<=
               (+ next.|m:1| next.|c:1|)
               2)
            (<= next.|m:1| next.|src.m:1|)
            (<= next.|c:1| next.|src.c:1|)
            (or
               (<=
                  (- next.|src.c:1| next.|c:1|)
                  (- next.|src.m:1| next.|m:1|))
               (= next.|src.m:1| next.|m:1|))
            (or
               (<=
                  (+ next.|dst.c:1| next.|c:1|)
                  (+ next.|dst.m:1| next.|m:1|))
               (=
                  (+ next.|dst.m:1| next.|m:1|)
                  0))))
      (= next.|src.m| next.|s.right.m|)
      (= next.|src.c| next.|s.right.c|)
      (= next.|dst.m| next.|s.left.m|)
      (= next.|dst.c| next.|s.left.c|)
      (= next.m next.|m:4|)
      (= next.c next.|c:4|)
      (=
         next.safe
         (and
            (<= 0 next.m)
            (<= 0 next.c)
            (<=
               1
               (+ next.m next.c))
            (<=
               (+ next.m next.c)
               2)
            (<= next.m next.|src.m|)
            (<= next.c next.|src.c|)
            (or
               (<=
                  (- next.|src.c| next.c)
                  (- next.|src.m| next.m))
               (= next.|src.m| next.m))
            (or
               (<=
                  (+ next.|dst.c| next.c)
                  (+ next.|dst.m| next.m))
               (=
                  (+ next.|dst.m| next.m)
                  0))))
      (=
         next.ITE
         (ite next.|boat_on_left_bank| next.|safe:1| next.safe))))

(query
   TS
   (or |gal-initializing| cex))
(query
   TS
   (or |gal-initializing| |safety_missionaries|))
(query
   TS
   (or |gal-initializing| |conservation_cannibals|))
(query
   TS
   (or |gal-initializing| |conservation_missionaries|))

[Lustre] Validating properties:
[Lustre] Property cex... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
considering simultaneous states to depth 2
considering simultaneous states to depth 2
considering simultaneous states to depth 3
considering simultaneous states to depth 3
considering simultaneous states to depth 4
considering simultaneous states to depth 4
considering simultaneous states to depth 5
considering simultaneous states to depth 5
considering simultaneous states to depth 6
considering simultaneous states to depth 6
considering simultaneous states to depth 7
considering simultaneous states to depth 7
considering simultaneous states to depth 8
considering simultaneous states to depth 8
considering simultaneous states to depth 9
considering simultaneous states to depth 9
considering simultaneous states to depth 10
considering simultaneous states to depth 10
considering simultaneous states to depth 11
considering simultaneous states to depth 11
considering simultaneous states to depth 12
[[1;91mInvalid[0m] 
Trace
=====

cex:
 Step | m | c | |-> 
------+---+---+-----
 1    | 0 | 2 |     
 2    | 0 | 1 |     
 3    | 0 | 2 |     
 4    | 0 | 1 |     
 5    | 2 | 0 |     
 6    | 1 | 1 |     
 7    | 2 | 0 |     
 8    | 0 | 1 |     
 9    | 0 | 2 |     
 10   | 0 | 1 |     
 11   | 0 | 2 |     
 12   | 0 | 1 |     

[Lustre] Property safety_missionaries... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[[1;92mValid[0m] considering simultaneous states to depth 1
[Lustre] Property conservation_cannibals... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[[1;92mValid[0m] considering simultaneous states to depth 1
[Lustre] Property conservation_missionaries... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[[1;92mValid[0m] considering simultaneous states to depth 1
[Lustre] Model status: [[1;91mInvalid[0m] 
