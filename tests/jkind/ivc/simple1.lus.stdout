Core Lustre
===========

node (x : int)
  returns (y)
  assumes (b, a)
  shows (ok)
let
  pre_y : int
    = pre y
   
  init_pre_y : int
    = 0 -> pre_y
   
  y : int
    = Add(x, init_pre_y)
   
  a : bool
    = Geq(x, Neg(1))
   
  b : bool
    = Geq(x, 0)
   
  ok : bool
    = Geq(y, 0)
tel
Sally Model
===========

(define-state-type
   S
   (
     (a Bool)
     (b Bool)
     (ok Bool)
     (x Int)
     (y Int)
     (|gal-initializing| Bool)
     (|init_pre_y:init| Bool)
     (|init_pre_y| Int)
     (|pre_y| Int))
   (
     (x Int)))
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |init_pre_y:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.x input.x)
      next.b
      next.a
      (= next.|pre_y| state.y)
      (ite
         state.|init_pre_y:init|
         (= next.|init_pre_y| 0)
         (= next.|init_pre_y| next.|pre_y|))
      (= next.|init_pre_y:init| false)
      (=
         next.y
         (+ next.x next.|init_pre_y|))
      (=
         next.a
         (<=
            (- 1)
            next.x))
      (=
         next.b
         (<= 0 next.x))
      (=
         next.ok
         (<= 0 next.y))))

(query
   TS
   (or |gal-initializing| ok))

[Lustre] Validating properties:
[Lustre] Property ok... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[Valid] considering simultaneous states to depth 1
[Lustre] Model status: [Valid] 
