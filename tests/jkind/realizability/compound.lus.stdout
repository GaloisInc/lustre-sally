Core Lustre
===========

node (p.x : int, p.y : int, z : int)
  returns (ok)
  assumes (Implies)
  shows (ok)
let
  ok : bool
    = And(Lt(p.x, z), Lt(z, p.y))
   
  pre_counter : int
    = pre counter
   
  counter : int
    = 0 -> Add(1, pre_counter)
   
  Implies : bool
    = Implies(Lt(counter, 5), Lt(p.x, Sub(p.y, 1)))
tel
Sally Model
===========

(define-state-type
   S
   (
     (Implies Bool)
     (counter Int)
     (ok Bool)
     (z Int)
     (|counter:init| Bool)
     (|gal-initializing| Bool)
     (|p.x| Int)
     (|p.y| Int)
     (|pre_counter| Int))
   (
     (z Int)
     (|p.x| Int)
     (|p.y| Int)))
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |counter:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.|p.x| input.|p.x|)
      (= next.|p.y| input.|p.y|)
      (= next.z input.z)
      next.Implies
      (=
         next.ok
         (and
            (< next.|p.x| next.z)
            (< next.z next.|p.y|)))
      (= next.|pre_counter| state.counter)
      (ite
         state.|counter:init|
         (= next.counter 0)
         (=
            next.counter
            (+ 1 next.|pre_counter|)))
      (= next.|counter:init| false)
      (=
         next.Implies
         (=>
            (< next.counter 5)
            (<
               next.|p.x|
               (- next.|p.y| 1))))))

(query
   TS
   (or |gal-initializing| ok))

[Lustre] Validating properties:
[Lustre] Property ok... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
[Invalid] 
Trace
=====

ok:
 Step | p              | z | |-> | ok    
------+----------------+---+-----+-------
 1    | {x = 0, y = 2} | 0 |     | False 

[Lustre] Model status: [Invalid] 
