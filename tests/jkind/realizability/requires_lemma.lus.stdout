Sally Model
===========

(define-state-type
   S
   (
     (Implies Bool)
     (counter Int)
     (lemma Bool)
     (ok Bool)
     (x Int)
     (y Int)
     (z Int)
     (|counter:init| Bool)
     (|gal-initializing| Bool)
     (|pre_counter| Int))
   (
     (x Int)
     (y Int)
     (z Int)))
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |counter:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.x input.x)
      (= next.y input.y)
      (= next.z input.z)
      next.Implies
      (=
         next.ok
         (and
            (< next.x next.z)
            (< next.z next.y)))
      (= next.|pre_counter| state.counter)
      (ite
         state.|counter:init|
         (= next.counter 0)
         (=
            next.counter
            (+ 1 next.|pre_counter|)))
      (= next.|counter:init| false)
      (=
         next.lemma
         (<= 0 next.counter))
      (=
         next.Implies
         (=>
            (<= 0 next.counter)
            (<
               next.x
               (- next.y 1))))))

(query
   TS
   (or |gal-initializing| lemma))
(query
   TS
   (or |gal-initializing| ok))

[Lustre] Validating properties:
[Lustre] Property lemma...
  [Sally][Valid] using 1 past state
[Lustre] Property ok...
  [Sally][Invalid]
[Trace] 
ok:
 Step | x | y | z | |-> | ok    | lemma 
------+---+---+---+-----+-------+-------
 1    | 0 | 2 | 0 |     | False | True  

[Lustre] Model status: [Invalid]
