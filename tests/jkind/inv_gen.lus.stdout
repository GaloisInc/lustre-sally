Core Lustre
===========

node ()
  returns (x)
  assumes ()
  shows (ok)
let
  pre_count$1 : int
    = pre count
   
  pre_count : int
    = pre count
   
  count : int
    = 1 -> ITE(Lt(pre_count$1, 5), Add(pre_count, 1), 5)
   
  pre_x$1 : bool
    = pre x
   
  x : bool
    = false -> And(Not(Geq(count, 5)), pre_x$1)
   
  pre_x : bool
    = pre x
   
  ok : bool
    = true -> Or(Not(pre_x), x)
   
  lemma : bool
    = Not(x)
tel
Sally Model
===========

(define-state-type
   S
   (
     (count Int)
     (lemma Bool)
     (ok Bool)
     (x Bool)
     (|count:init| Bool)
     (|gal-initializing| Bool)
     (|ok:init| Bool)
     (|pre_count:1| Int)
     (|pre_count| Int)
     (|pre_x:1| Bool)
     (|pre_x| Bool)
     (|x:init| Bool))
   ())
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |count:init| true)
      (= |x:init| true)
      (= |ok:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.|pre_count:1| state.count)
      (= next.|pre_count| state.count)
      (ite
         state.|count:init|
         (= next.count 1)
         (=
            next.count
            (ite
               (< next.|pre_count:1| 5)
               (+ next.|pre_count| 1)
               5)))
      (= next.|count:init| false)
      (= next.|pre_x:1| state.x)
      (ite
         state.|x:init|
         (= next.x false)
         (=
            next.x
            (and
               (not
                  (<= 5 next.count))
               next.|pre_x:1|)))
      (= next.|x:init| false)
      (= next.|pre_x| state.x)
      (ite
         state.|ok:init|
         (= next.ok true)
         (=
            next.ok
            (or
               (not next.|pre_x|)
               next.x)))
      (= next.|ok:init| false)
      (=
         next.lemma
         (not next.x))))

(query
   TS
   (or |gal-initializing| ok))

[Lustre] Validating properties:
[Lustre] Property ok... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
considering simultaneous states to depth 2
considering simultaneous states to depth 2
considering simultaneous states to depth 3
considering simultaneous states to depth 3
considering simultaneous states to depth 4
considering simultaneous states to depth 4
considering simultaneous states to depth 5
considering simultaneous states to depth 5
considering simultaneous states to depth 6
considering simultaneous states to depth 6
considering simultaneous states to depth 7
considering simultaneous states to depth 7
considering simultaneous states to depth 8
considering simultaneous states to depth 8
considering simultaneous states to depth 9
considering simultaneous states to depth 9
considering simultaneous states to depth 10
considering simultaneous states to depth 10
counter-example search depth 0
counter-example search depth 1
counter-example search depth 2
counter-example search depth 3
counter-example search depth 4
counter-example search depth 5
counter-example search depth 6
counter-example search depth 7
counter-example search depth 8
counter-example search depth 9
counter-example search depth 10
[[1;93mUnknown[0m] Valid up to depth 10
[Lustre] Model status: [[1;93mUnknown[0m] 
