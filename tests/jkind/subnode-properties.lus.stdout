Core Lustre
===========

node (rand$3 : bool)
  returns (prop)
  assumes ()
  shows (prop, lemma, lemma$1)
let
  rand$2 : bool
    = rand$3
   
  pre_counter2 : int
    = pre counter2
   
  counter2 : int
    = ITE(rand$2, Neg(1), Neg(1)) -> Add(1, pre_counter2)
   
  rand$1 : bool
    = rand$3
   
  rand : bool
    = rand$1
   
  pre_counter : int
    = pre counter
   
  counter : int
    = ITE(rand, Neg(1), Neg(1)) -> Add(1, pre_counter)
   
  ten : bool
    = Geq(counter, 10)
   
  prop : bool
    = Or(Lt(counter2, 10), ten)
   
  lemma$1 : bool
    = Geq(counter2, Neg(1))
   
  lemma : bool
    = Geq(counter, Neg(1))
tel
Sally Model
===========

(define-state-type
   S
   (
     (counter Int)
     (counter2 Int)
     (lemma Bool)
     (prop Bool)
     (rand Bool)
     (ten Bool)
     (|counter2:init| Bool)
     (|counter:init| Bool)
     (|gal-initializing| Bool)
     (|lemma:1| Bool)
     (|pre_counter2| Int)
     (|pre_counter| Int)
     (|rand:1| Bool)
     (|rand:2| Bool)
     (|rand:3| Bool))
   (
     (|rand:3| Bool)))
(define-transition-system
   TS
   S
   (and
      (= |gal-initializing| true)
      (= |counter2:init| true)
      (= |counter:init| true))
   (and
      (= next.|gal-initializing| false)
      (= next.|rand:3| input.|rand:3|)
      (= next.|rand:2| next.|rand:3|)
      (= next.|pre_counter2| state.counter2)
      (ite
         state.|counter2:init|
         (=
            next.counter2
            (ite
               next.|rand:2|
               (- 1)
               (- 1)))
         (=
            next.counter2
            (+ 1 next.|pre_counter2|)))
      (= next.|counter2:init| false)
      (= next.|rand:1| next.|rand:3|)
      (= next.rand next.|rand:1|)
      (= next.|pre_counter| state.counter)
      (ite
         state.|counter:init|
         (=
            next.counter
            (ite
               next.rand
               (- 1)
               (- 1)))
         (=
            next.counter
            (+ 1 next.|pre_counter|)))
      (= next.|counter:init| false)
      (=
         next.ten
         (<= 10 next.counter))
      (=
         next.prop
         (or
            (< next.counter2 10)
            next.ten))
      (=
         next.|lemma:1|
         (<=
            (- 1)
            next.counter2))
      (=
         next.lemma
         (<=
            (- 1)
            next.counter))))

(query
   TS
   (or |gal-initializing| prop))
(query
   TS
   (or |gal-initializing| lemma))
(query
   TS
   (or |gal-initializing| |lemma:1|))

[Lustre] Validating properties:
[Lustre] Property prop... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
considering simultaneous states to depth 2
considering simultaneous states to depth 2
considering simultaneous states to depth 3
considering simultaneous states to depth 3
considering simultaneous states to depth 4
considering simultaneous states to depth 4
considering simultaneous states to depth 5
considering simultaneous states to depth 5
considering simultaneous states to depth 6
considering simultaneous states to depth 6
considering simultaneous states to depth 7
considering simultaneous states to depth 7
considering simultaneous states to depth 8
considering simultaneous states to depth 8
considering simultaneous states to depth 9
considering simultaneous states to depth 9
considering simultaneous states to depth 10
considering simultaneous states to depth 10
counter-example search depth 0
counter-example search depth 1
counter-example search depth 2
counter-example search depth 3
counter-example search depth 4
counter-example search depth 5
counter-example search depth 6
counter-example search depth 7
counter-example search depth 8
counter-example search depth 9
counter-example search depth 10
[[1;93mUnknown[0m] Valid up to depth 10
[Lustre] Property lemma... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[[1;92mValid[0m] considering simultaneous states to depth 1
[Lustre] Property lemma... considering simultaneous states to depth 0
considering simultaneous states to depth 0
considering simultaneous states to depth 1
considering simultaneous states to depth 1
[[1;92mValid[0m] considering simultaneous states to depth 1
[Lustre] Model status: [[1;93mUnknown[0m] 
